FROM php:7.1.27-fpm
LABEL maintainer="Jake Gillingham <jake.gillingham5@gmail.com>"

# Install dev dependencies
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    curl \
    libmemcached-dev \
    libz-dev \
    libpq-dev \
    libjpeg-dev \
    libpng-dev \
    libwebp-dev \
    libfreetype6-dev \
    libssl-dev \
    libmcrypt-dev \
    libxrender1 \
    zip \
    libfontconfig1 \
    libxext6 \
  && rm -rf /var/lib/apt/lists/*

RUN docker-php-ext-install mcrypt \
  && docker-php-ext-install pdo_mysql \
  && docker-php-ext-install pdo_pgsql \
  && docker-php-ext-install bcmath \
  && docker-php-ext-configure gd \
    --enable-gd-native-ttf \
    --with-jpeg-dir=/usr/lib \
    --with-webp-dir=/usr/lib \
    --with-freetype-dir=/usr/include/freetype2 \
  && docker-php-ext-install gd \
  && docker-php-ext-install opcache

RUN echo "php_admin_flag[log_errors] = On">>/usr/local/etc/php-fpm.conf \
  && echo "memory_limit = 1G" >> /usr/local/etc/php/conf.d/upload.ini \
  && echo "upload_max_filesize = 15M" >> /usr/local/etc/php/conf.d/upload.ini \
  && echo "post_max_size = 30M" >> /usr/local/etc/php/conf.d/upload.ini

COPY ./ /var/www


RUN chmod 777 /var/www/storage -R \
 && chmod 777 /var/www/bootstrap/cache -R \
 && chmod u+x /var/www/docker/start.sh

# Node & Yarn install
ENV NODE_VERSION 10.13.0
ENV NVM_DIR /usr/local/nvm

RUN mkdir ${NVM_DIR} && \
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash && \
    . $NVM_DIR/nvm.sh \
    && nvm install $NODE_VERSION \
    && nvm alias default $NODE_VERSION \
    && nvm use default

ENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules
ENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

RUN npm install -g yarn

# Cypress dependencies
RUN apt update && \
    apt install libgtk-3-0 xvfb libgconf2-dev libxtst-dev libxss-dev libnss3 libasound2 -y --no-install-recommends && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Server and Test Dependency
RUN apt-get update && apt-get -y install procps

# Install wget
RUN apt-get update && apt-get install -y gnupg2 && apt-get install wget

# install Chromebrowser
RUN \
  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
  echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
RUN apt-get update
# disabled dbus install - could not get it to install
# but tested an example project, and Chrome seems to run fine
# RUN apt-get install -y dbus-x11
RUN apt-get install -y google-chrome-stable
RUN rm -rf /var/lib/apt/lists/*

# "fake" dbus address to prevent errors
# https://github.com/SeleniumHQ/docker-selenium/issues/87
ENV DBUS_SESSION_BUS_ADDRESS=/dev/null

RUN echo "Chrome version:  $(google-chrome --version) \n"

WORKDIR /var/www

ENTRYPOINT []

CMD ["/var/www/docker/start.sh"]